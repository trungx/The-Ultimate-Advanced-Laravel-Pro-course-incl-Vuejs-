1
00:00:00,840 --> 00:00:06,810
Let's talk about a little Ready's future Remember this is a persistent database that for every time

2
00:00:06,810 --> 00:00:10,890
we said this key is automatically going to be persisted into the story.

3
00:00:11,040 --> 00:00:11,630
OK.

4
00:00:11,670 --> 00:00:16,170
But now when we want to run our test we want a fresh copy of the database just like we're doing right

5
00:00:16,170 --> 00:00:16,370
here.

6
00:00:16,380 --> 00:00:18,360
We are in my database right.

7
00:00:18,510 --> 00:00:24,150
So we're going to actually create a command that would help us to clever ideas in any situation we want

8
00:00:24,150 --> 00:00:29,100
to clarify so we can call this maybe flush with this.

9
00:00:29,910 --> 00:00:36,410
Every time we want to flush our Reddy's database before actually performing our test on redis.

10
00:00:36,420 --> 00:00:36,980
OK.

11
00:00:37,110 --> 00:00:43,050
So our head of our true test case the Peachtree in my test directory and I'll quit that mid-thought

12
00:00:44,070 --> 00:00:50,840
so probably function flush ready is and this would simply call redis.

13
00:00:51,070 --> 00:00:54,870
And we have a flush or method and this is.

14
00:00:54,970 --> 00:01:01,200
And this would delete all the key stuff we have in all of our databases in our ready store.

15
00:01:01,260 --> 00:01:02,780
So you shred this year.

16
00:01:02,940 --> 00:01:07,580
And every time we run our test it's going to automatically flush redis.

17
00:01:07,590 --> 00:01:12,530
So if we want to clean up the database before running our test we just we just need to call that method.

18
00:01:12,600 --> 00:01:13,160
OK.

19
00:01:13,290 --> 00:01:21,240
Now one more thing I want to talk about is access right here is making sure that we can save the first

20
00:01:21,660 --> 00:01:24,950
lesson and the first series into our database.

21
00:01:24,990 --> 00:01:25,560
OK.

22
00:01:25,560 --> 00:01:30,600
Meaning that in a User class we can relieve them of this and a 2 to 1.

23
00:01:30,700 --> 00:01:34,400
And the sun also set it to one and this test will still pass.

24
00:01:34,500 --> 00:01:35,790
But then that's not what we want.

25
00:01:35,780 --> 00:01:36,270
OK.

26
00:01:36,390 --> 00:01:42,870
We want to that this test should pass for all series and all lessons therefore what we're going to do

27
00:01:42,870 --> 00:01:47,880
is just for our own security creates another missing

28
00:01:54,680 --> 00:01:59,310
and this lesson will belong to another series because we're just used to create.

29
00:01:59,420 --> 00:02:03,960
But what I want to do is pass and of our rights into this creates.

30
00:02:04,100 --> 00:02:08,020
And I would say serious ID should be one.

31
00:02:08,240 --> 00:02:08,600
OK.

32
00:02:08,600 --> 00:02:13,730
Because you remember a series is going to be created with idea of one from this first call and would

33
00:02:13,730 --> 00:02:14,530
avoid this one.

34
00:02:14,540 --> 00:02:20,250
Also have one therefore this to see which belong to the series that is which I'd like you to see which

35
00:02:20,250 --> 00:02:21,320
is the idea of one.

36
00:02:21,440 --> 00:02:32,270
Now when we call use of complete lesson would also call use our complete lesson on the second lesson.

37
00:02:32,270 --> 00:02:37,550
So we know that the user can actually complete a second lesson also then we're going to assert that

38
00:02:37,760 --> 00:02:43,560
this equals one and also equals 1 and 2 OK.

39
00:02:43,590 --> 00:02:50,610
So when we get this key for the user of ID 1 and the series Id want it should show us that we've completed

40
00:02:50,610 --> 00:02:55,210
less than 1 and less than 2 and they should be in the area that is returned.

41
00:02:55,350 --> 00:02:55,820
OK.

42
00:02:55,890 --> 00:03:02,640
So if our method actually was as a specter we should have exactly a successful test.

43
00:03:02,640 --> 00:03:04,730
Even after all the changes we've made.

44
00:03:04,770 --> 00:03:06,050
So let's run that.

45
00:03:06,280 --> 00:03:06,930
Okay great.

46
00:03:06,930 --> 00:03:10,730
Looks like we're good therefore we can complete the number of lessons we want.

47
00:03:10,740 --> 00:03:13,870
And it also can now walk out perfectly.

48
00:03:13,980 --> 00:03:15,240
OK great job.

