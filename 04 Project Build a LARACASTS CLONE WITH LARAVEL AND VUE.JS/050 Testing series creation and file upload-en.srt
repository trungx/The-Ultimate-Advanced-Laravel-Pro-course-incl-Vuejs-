1
00:00:00,200 --> 00:00:02,750
Give it some thoughts and I'm going to quit Neuter's.

2
00:00:02,790 --> 00:00:04,520
Catch me areason make just.

3
00:00:04,580 --> 00:00:07,010
And this is simply going to be crazy test.

4
00:00:07,070 --> 00:00:07,430
OK.

5
00:00:07,440 --> 00:00:11,030
So let's head the rather creates the mistrust and what do we want to do.

6
00:00:11,030 --> 00:00:13,660
We want to make sure that our store method works perfectly right.

7
00:00:13,710 --> 00:00:17,190
So public functions as a user can create a series.

8
00:00:17,190 --> 00:00:19,300
OK so what we want to do.

9
00:00:19,380 --> 00:00:23,840
Let's Checkout our series control and looks like we already know how it's going to walk.

10
00:00:23,880 --> 00:00:27,980
So we want to make sure that we actually upload a photo of that Gladys.

11
00:00:28,290 --> 00:00:32,310
And we want to make sure that we actually have a series that is a blend and we want to make sure that

12
00:00:32,310 --> 00:00:34,320
we will debate the use of particular needs.

13
00:00:34,410 --> 00:00:36,840
So let's go ahead and try that functionality.

14
00:00:36,840 --> 00:00:40,410
So first of all we need to make a post request to an endpoint.

15
00:00:40,410 --> 00:00:44,940
We all know the end point which is it means passing a rate of the time.

16
00:00:45,000 --> 00:00:46,240
So we have a title.

17
00:00:46,290 --> 00:00:49,220
So we're just going to see jurors for the best.

18
00:00:49,350 --> 00:00:51,820
It's the title of our series description.

19
00:00:51,870 --> 00:00:54,590
It's going to be best VGX cost ever.

20
00:00:54,660 --> 00:00:57,150
And remember we are all building an image.

21
00:00:57,180 --> 00:01:04,740
So why don't we get an ad for instance from novel rights with this fake metho that is actually going

22
00:01:04,740 --> 00:01:06,720
to create an image for us.

23
00:01:06,750 --> 00:01:08,660
So we could call fake M.H..

24
00:01:08,700 --> 00:01:16,280
Let's just have to watch in a class so low that we need to know that we have a fake metho and this simply

25
00:01:16,280 --> 00:01:21,130
cease testing fire factory on the fight for freedom agenda reads an image for us.

26
00:01:21,230 --> 00:01:21,640
OK.

27
00:01:21,780 --> 00:01:23,600
So did fire fake.

28
00:01:23,640 --> 00:01:26,400
And then he's going to give us an instance of fire factory.

29
00:01:26,550 --> 00:01:30,760
And if we had a box of five factory it's going to actually create an image for us.

30
00:01:30,810 --> 00:01:35,280
So image is going to give us new file and it's going to college and wait image Mithal that's going to

31
00:01:35,280 --> 00:01:39,110
get us back to our test our fake image.

32
00:01:39,210 --> 00:01:42,460
We can't specify the dimensions and we can also satisfy the need.

33
00:01:42,510 --> 00:01:48,300
So if we check out the MH mid-thought you know for archery he takes it in the name Neue on the hige

34
00:01:48,480 --> 00:01:48,760
right.

35
00:01:48,780 --> 00:01:52,100
So that's the name of the phone so he can be whatever name.

36
00:01:52,110 --> 00:01:57,600
So we're just going to see EMH series that PMG then we need to import bit of that right.

37
00:01:57,690 --> 00:02:02,630
So you think it's from the HGP of that file.

38
00:02:02,820 --> 00:02:03,710
Let's check that out.

39
00:02:03,750 --> 00:02:04,220
Yeah.

40
00:02:04,300 --> 00:02:09,630
It's then let's just assert every direction to make sure everything was successful then what we could

41
00:02:09,630 --> 00:02:14,910
do is actually assert our games our storage to make sure we have to really have something in our storage

42
00:02:14,910 --> 00:02:15,440
right.

43
00:02:15,480 --> 00:02:20,470
So that will price reduced each week and it's going to fake astore each.

44
00:02:20,490 --> 00:02:25,740
And what the fix is going to do it for headbutts of storage that Ph.D. the fiqh method is going to give

45
00:02:25,740 --> 00:02:27,600
us a clean directory to work with.

46
00:02:27,750 --> 00:02:33,030
And if we don't know this is going to get the system's default Geske and this is simply going to help

47
00:02:33,030 --> 00:02:36,850
us to clean the tree give us the fresh new juice to work with.

48
00:02:37,080 --> 00:02:38,790
And a lot of other stuff.

49
00:02:38,850 --> 00:02:41,100
So let's go ahead and work with that.

50
00:02:41,100 --> 00:02:47,290
So we fixed the storage and now it gives us access to the start of each disk and we could specify the

51
00:02:47,290 --> 00:02:49,380
dish that we want to check against.

52
00:02:49,410 --> 00:02:53,150
And once we make sure that the disk which was fine here is the one we faked.

53
00:02:53,160 --> 00:02:56,250
So let's just go ahead and walk with that for disk.

54
00:02:56,260 --> 00:02:58,980
So config file systems that default.

55
00:02:59,010 --> 00:03:04,850
So you know for systems that we actually have this default key right here that specifies the default

56
00:03:04,860 --> 00:03:09,650
system is supposed to use that case local so-called feek file systems that default is going to give

57
00:03:09,650 --> 00:03:10,260
us that.

58
00:03:10,290 --> 00:03:13,210
And we could actually parse exactly the same thing right here.

59
00:03:13,240 --> 00:03:13,730
OK.

60
00:03:13,800 --> 00:03:20,520
Then we call a set exists method which level provides for us and I'm going to show you where that mid-thought

61
00:03:20,580 --> 00:03:26,400
exist really fosterling a all now will illuminate a tree in our farm system.

62
00:03:26,400 --> 00:03:31,520
We can see we have a file system up to try and find assert exist mid-thought.

63
00:03:31,620 --> 00:03:32,280
There we go.

64
00:03:32,310 --> 00:03:38,160
So assert that the fire exists in quiet osteopaths in a bar or the particular file that we try to find

65
00:03:38,400 --> 00:03:42,780
and then it's simply going to use unit Asatru to check if they exist.

66
00:03:42,810 --> 00:03:43,300
Right.

67
00:03:43,440 --> 00:03:44,930
So let's go ahead and use not.

68
00:03:45,000 --> 00:03:49,470
So right here we need to parse the path that we use to load the file.

69
00:03:49,560 --> 00:03:53,040
And we already know we need to get the streets lock of the title.

70
00:03:53,130 --> 00:03:58,310
So why don't we just copy this title right here and we need to also add such an extension.

71
00:03:58,320 --> 00:04:02,930
Concatenate these two dots puji that's the extension we use and right here.

72
00:04:03,000 --> 00:04:07,810
And then we have to also make sure we concatenate the directory to which we are good at that.

73
00:04:07,900 --> 00:04:13,930
OK so we know we want to see which directory tree and we know we want the filename to be the stream

74
00:04:13,930 --> 00:04:15,530
slot of the title.

75
00:04:15,720 --> 00:04:20,700
And we also we want attached or regional extension of the overloaded farm.

76
00:04:20,760 --> 00:04:21,200
Right.

77
00:04:21,330 --> 00:04:27,180
So we are going to assert that it exists and we're also going to assert that we have some database entries

78
00:04:27,180 --> 00:04:30,560
but for now let's go ahead and run this test and see where we are.

79
00:04:30,870 --> 00:04:31,760
We have before.

80
00:04:31,800 --> 00:04:32,620
I'm sorry about that.

81
00:04:32,620 --> 00:04:37,350
This store is to be series obviously that's run that test.

82
00:04:37,410 --> 00:04:44,990
We have 500 let's just emote exception handling to see that all this without exception handling.

83
00:04:45,050 --> 00:04:46,360
Why not test again.

84
00:04:46,410 --> 00:04:48,060
No such table series.

85
00:04:48,150 --> 00:04:54,160
We need to use a fresh database so you use Refresh Eastridge one that says again.

86
00:04:54,330 --> 00:04:54,760
OK.

87
00:04:54,810 --> 00:05:00,350
And it successfully passes meaning that this test for the that far succeed in.

88
00:05:00,400 --> 00:05:05,110
But we also check if we actually have the post on a CBC in each of these.

89
00:05:05,120 --> 00:05:05,530
Right.

90
00:05:05,660 --> 00:05:14,030
So this search the database has in the series table a SLOC war or a war where the SLOC is strings log

91
00:05:14,330 --> 00:05:16,670
of view yes for the best.

92
00:05:16,670 --> 00:05:17,030
OK.

93
00:05:17,060 --> 00:05:22,010
So this is a title we want to make sure that if we check in to see researchable actually going to find

94
00:05:22,010 --> 00:05:26,640
a field where the law is this exact same strange loan value.

95
00:05:26,690 --> 00:05:27,340
Right.

96
00:05:27,410 --> 00:05:29,780
That's one that's asked what I'm asking.

97
00:05:29,780 --> 00:05:30,650
And that was successful.

98
00:05:30,650 --> 00:05:37,180
So we are successfully testing our Lord and we also testing our database record store each.

99
00:05:37,180 --> 00:05:39,850
That's if you factor in the very next video.

